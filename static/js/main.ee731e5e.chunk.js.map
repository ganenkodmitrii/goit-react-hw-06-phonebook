{"version":3,"sources":["components/Container/Container.module.css","redux/phonebook-action.js","redux/phonebook-reducer.js","redux/store.js","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","state","filter","_","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","Container","children","className","s","container","Section","title","Typography","variant","gutterBottom","ContactForm","formSubmitHandler","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","htmlFor","TextField","label","type","onChange","Button","style","display","marginTop","color","ContactList","onDeleteContact","List","map","ListItem","justifyContent","paddingLeft","marginLeft","onClick","Filter","App","useSelector","dispatch","useDispatch","validateContact","find","contact","displayError","error","alert","validationError","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ee731e5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1L3nj\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n// import types from './phonebook-types';\n\nexport const addContact = createAction(\n    'todos/add',\n    function prepare(name, number) {\n        return {\n            payload: {\n                id: uuidv4(),\n                name,\n                number,\n            },\n        };\n    },\n);\n\nexport const deleteContact = createAction('todos/delete');\nexport const changeFilter = createAction('todos/changeFilter');\n\n// export const addContact = (name, number) => ({\n//     type: types.ADD,\n//     payload: {\n//         id: uuidv4(),\n//         name,\n//         number,\n//     },\n// });\n\n// export const deleteContact = contactId => ({\n//     type: types.DELETE,\n//     payload: contactId,\n// });\n\n// export const changeFilter = value => ({\n//     type: types.CHANGE_FILTER,\n//     payload: value,\n// });\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './phonebook-action';\n// import types from './phonebook-types';\n\nconst initialContacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(initialContacts, {\n    [addContact]: (state, { payload }) => [...state, payload],\n    [deleteContact]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\n// const items = (state = initialContacts, { type, payload }) => {\n//     switch (type) {\n//         case types.ADD:\n//             return [...state, payload];\n//         //state.concat(payload)\n\n//         case types.DELETE:\n//             return state.filter(({ id }) => id !== payload);\n\n//         default:\n//             return state;\n//     }\n// };\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, action) => action.payload,\n});\n\n// const filter = (state = '', { type, payload }) => {\n//     switch (type) {\n//         case types.CHANGE_FILTER:\n//             return payload;\n\n//         default:\n//             return state;\n//     }\n// };\n\nexport default combineReducers({\n    items,\n    filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook-reducer';\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\n\nconst phonebookPersistConfig = {\n    key: 'phonebook',\n    storage,\n    blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n    reducer: {\n        contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <div>\r\n            {title && (\r\n                <Typography variant=\"h2\" gutterBottom>\r\n                    {title}\r\n                </Typography>\r\n            )}\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n","import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\n\nimport { useState } from 'react';\n\nfunction ContactForm({ formSubmitHandler }) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        formSubmitHandler(name, number);\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"\">\n                <Typography variant=\"h6\" gutterBottom>\n                    Name\n                </Typography>\n                <TextField\n                    label=\"Enter name\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleChange}\n                />\n            </label>\n            <label htmlFor=\"\">\n                <Typography variant=\"h6\" gutterBottom>\n                    Number\n                </Typography>\n                <TextField\n                    label=\"Enter number\"\n                    variant=\"outlined\"\n                    type=\"text\"\n                    name=\"number\"\n                    value={number}\n                    onChange={handleChange}\n                />\n            </label>\n\n            <Button\n                style={{\n                    display: 'block',\n                    marginTop: '10px',\n                }}\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n            >\n                Add contacts\n            </Button>\n        </form>\n    );\n}\n\nContactForm.propTypes = {\n    formSubmitHandler: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n    return (\n        <List>\n            {contacts.map(({ id, name, number }) => (\n                <ListItem\n                    style={{\n                        justifyContent: 'space-between',\n                        paddingLeft: '0',\n                    }}\n                    key={id}\n                >\n                    <Typography variant=\"h6\" gutterBottom>\n                        {name}: {number}\n                    </Typography>\n\n                    <Button\n                        style={{\n                            marginLeft: '10px',\n                        }}\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                            onDeleteContact(id);\n                        }}\n                    >\n                        Delete\n                    </Button>\n                </ListItem>\n            ))}\n        </List>\n    );\n}\nContactList.propTypes = {\n    onDeleteContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n        }),\n    ),\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nfunction Filter({ filter, onChange }) {\n    return (\n        <label>\n            <Typography variant=\"h6\" gutterBottom>\n                Find contacts by name\n            </Typography>\n            <TextField\n                label=\"Enter name\"\n                variant=\"outlined\"\n                type=\"text\"\n                value={filter}\n                onChange={onChange}\n            />\n        </label>\n    );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport './App.css';\nimport {\n    addContact,\n    deleteContact,\n    changeFilter,\n} from './redux/phonebook-action';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n    const contacts = useSelector(state => state.contacts.items);\n    const filter = useSelector(state => state.contacts.filter);\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (name, number) => {\n        const validationError = validateContact(name, number);\n        if (validationError) {\n            displayError(validationError);\n        } else {\n            dispatch(addContact(name, number));\n        }\n    };\n\n    const handleDeleteContact = contactId => {\n        dispatch(deleteContact(contactId));\n    };\n\n    const handleFilter = e => {\n        dispatch(changeFilter(e.currentTarget.value));\n    };\n\n    const getVisibleContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n        );\n    };\n\n    const validateContact = (name, number) => {\n        if (name === '' || number === '') {\n            return 'Please add contact';\n        }\n        const existingContact = contacts.find(contact => contact.name === name);\n        if (existingContact) {\n            return `${name} is already in contacts!`;\n        }\n    };\n\n    const displayError = error => {\n        alert(error);\n    };\n\n    return (\n        <Container>\n            <Section title=\"Phonebook\">\n                <ContactForm formSubmitHandler={handleSubmit} />\n            </Section>\n            <Section title=\"Contacts\">\n                <Filter value={filter} onChange={handleFilter} />\n                <ContactList\n                    contacts={getVisibleContacts()}\n                    onDeleteContact={handleDeleteContact}\n                />\n            </Section>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport '@fontsource/roboto';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}